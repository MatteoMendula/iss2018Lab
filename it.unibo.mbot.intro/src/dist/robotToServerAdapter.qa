/* 
 * ==============================================================
 * robotToServerAdapter.qa
 * ==============================================================
 */ 
System robotTServerAdapter   
Event polar         :  p( Distance, Angle  )
Event serverrequest :  serverrequest( CONTENT )  

Context ctxRobotToServerAdapter ip [ host="localhost"    port=8077 ]      
Context ctxMbotControl          ip [ host="localhost"    port=8029 ]   -standalone 

QActor qafrontendactivator  context ctxRobotToServerAdapter{
	Plan init normal [  
		println("ACTIVATING NODE SERVER") ;
 		nodeOp "./nodeCode/RobotFrontEndServer.js -o"   //WARNING: the actor is engaged since PolarToRadar.js waits		
	]
}
QActor qaforserver context ctxRobotToServerAdapter{
	Plan init normal [  
	]     
	switchTo waitForEvents                       
	    
	Plan waitForEvents[  printCurrentEvent  ]       
  	transition stopAfter 600000    
 		whenEvent serverrequest  ->  handleServerRequest ,
 		whenEvent polar : p( D, A )  do   printCurrentEvent //TODO ...
    finally repeatPlan   
    
    Plan   handleServerRequest resumeLastPlan [
    	printCurrentEvent ;
    	onEvent serverrequest : serverrequest( data(SENDER,DATA) ) -> sendToExternalServer  SENDER -m DATA
    ]  
}