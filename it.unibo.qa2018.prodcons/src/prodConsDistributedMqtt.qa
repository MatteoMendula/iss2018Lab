/* 
 * prodConsDistributed.qa
 */
System prodConsDistributed     
Dispatch info : info(X)
Context  ctxBasicProdDistr ip [ host="localhost"  port=8079 ]     
Context  ctxBasicConsDistr ip [ host="localhost"  port=8089 ]  -g green  
QActor producerdistr context ctxBasicConsDistr{    
		Rules{
			item(1).
			item(2).
		}
 	State init initial           
	   	[	[ !? item(X) ] println( producer(sends(X))  )  ;
	  		[ ?? item(X)] forward consumerdistr -m info : info(X) 
	  									else endPlan "producer(ends)" 
	   	] 	
	   	finally repeatPlan
 }   
 QActor consumerdistr context ctxBasicConsDistr{   
  	State init initial  [  println( consumer(waiting) ) ]
	transition whenTime 2000 -> handleTout
		whenMsg info : info(X) do println( consumerHandles(X) ) 	
	  	finally repeatPlan
   	State handleTout [
  		 println( consumer(tout)  ) ;
  		  delay 10000	//to avoid immediate GUI disappearance
  	]  	
 }