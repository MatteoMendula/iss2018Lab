plan(1,init, sentence(true,move(actorOp(getName)),'','' ))
plan(2,init, sentence(-  actorOpDone( OP,R) ,move(print(myname( R))),'','' ))
plan(1,doRequest, sentence(true,move(print("testerUser1 emits request")),'','' ))
plan(2,doRequest, sentence(true,forward(mbotmanager, "ctxMbotManager2, bookingRequest,bookingRequest( true)),'','' ))
plan(1,handleAnswer, sentence(true,move(print("testerUser1 handleAnswer")),'','' ))
plan(2,handleAnswer, sentence(true,printCurrentMessage(''),'','' ))
plan(3,handleAnswer, sentence(true,msgswitch(bookingRequestAnswer, bookingRequestAnswer( failure) , notHere SendDispatch),'','' ))
plan(4,handleAnswer, sentence(true,msgswitch(bookingRequestAnswer, bookingRequestAnswer( token( TK)) , notHere SendDispatch),'','' ))
plan(1,nextStep, sentence(true,move(print("testerUser1 nextStep")),'','' ))
plan(1,usage, sentence(true,move(print("testerUser1 usage")),'','' ))
plan(2,usage, sentence(true,msgswitch(usage, usage( token( TK)) , addRule( token( TK) )),'','' ))
plan(3,usage, sentence( token( TOKEN),forward(mbotmanager, "ctxMbotManager2, getRobotDriveInterface,getRobotDriveInterface( TOKEN)),'','' ))
plan(4,usage, sentence(true,delay( 4000) ,'','' ))
plan(1,release, sentence(true,move(print("testerUser1 release")),'','' ))
plan(2,release, sentence(-  token( TOKEN) ,forward(mbotmanager, "ctxMbotManager2, bookingRelease,bookingRelease( TOKEN)),'','' ))
plan(3,release, sentence(true,move(print("testerUser1 ENDS")),'','' ))
plan(4,release, sentence(true,delay( 6000000) ,'','' ))
plan(1,waitForNotification, sentence(true,move(print("testerUser1 waitForNotification")),'','' ))
plan(1,lookAtNotification, sentence(true,move(print("testerUser1 lookAtNotification")),'','' ))
plan(2,lookAtNotification, sentence(true,eventswitch(notify, »notify( available), notHere SendDispatch ),'','' ))
plan(3,lookAtNotification, sentence(true,eventswitch(notify, »notify( removed), addRule( endOfJob ) ),'','' ))
