/* 
 * ==============================================================
 * evlog.qa
  * ==============================================================
 */     
System evlog     
Event usercmd      : usercmd(CMD)     
Event sonarSensor  : sonar( NAME, DISTANCE )	//From rover or real robot
Event alarmev      : alarm( X )   

Event taskexec     : taskexec(  tasktodo( NAME, ARGS ) )	//emitted by R0		
Event tasktodo     : tasktodo( TASK, ARGS )	    //emitted for other agents
Event taskdone     : taskdone( TASK, ARGS )		//emitted when found a passage 

//pubSubServer  "tcp://192.168.43.229:1883"    
pubSubServer  "tcp://localhost:1883"    		//for testing

Context ctxEvlog ip [ host="localhost"   port=8179 ]  -g yellow

QActor evlogagent context ctxEvlog -pubsub{       
	Plan init normal [  println("evlogagent STARTS") ] 
	switchTo doWork
	
	Plan doWork[] 
	transition   stopAfter 6000000        
    	whenEvent  usercmd      -> logEvent,
  		whenEvent  sonarSensor  -> logEvent,
   		whenEvent  tasktodo     -> logEvent,
    	whenEvent  taskdone     -> logEvent,
  		whenEvent  taskexec      -> logEvent
  	finally repeatPlan
  	
  	Plan  logEvent resumeLastPlan[
  		printCurrentEvent 
  	]
 	  
}