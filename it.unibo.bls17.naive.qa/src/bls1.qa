/*
 * This is A MODEL, result of problem analysis 
 * written in the CUSTOM meta-model/language qa
 */  
System bls1  
Dispatch turn     : switch   
Event local_click : clicked(N)  //N : natural
Event usercmd     : usercmd(N)  //N : natural

Event ledcmd : ledcmd( CMD )  	//CMD = on | off

Context bls1Ctx ip [ host="localhost"  port=8029 ]    

/*
 * LED subsystem
 */
QActor ledimpl context bls1Ctx {
Plan init normal  [        
		javaRun it.unibo.custom.gui.customBlsGui.createCustomLedGui() 
    ]	
    switchTo waitForCmd   
   	 
  	Plan waitForCmd [ ]
    transition stopAfter 3000000
    	whenMsg ledcmd -> handleLedCmd
    finally repeatPlan	
    
    Plan handleLedCmd resumeLastPlan[
    	onEvent ledcmd : ledcmd( on )  -> javaRun it.unibo.custom.gui.customBlsGui.setLed("on");
    	onEvent ledcmd : ledcmd( off ) -> javaRun it.unibo.custom.gui.customBlsGui.setLed("off")
    ]
}
QActor  ledmodel context bls1Ctx {
Rules{
	ledmodel( name(led1), value(off) ).	
	changeledValue( V ) :- 
		replaceRule( ledmodel( NAME,VALUE ), ledmodel( NAME,value(V) ) ).
}
	Plan init normal  [     
		delay 500;   //give to the implementation the time to start
 		[ !? ledmodel( NAME, value(V) )] emit ledcmd : ledcmd( V ) //RLed1
    ]
   	switchTo waitForCmd   
   	 
  	Plan waitForCmd [ ]
    transition stopAfter 3000000
    	whenMsg turn -> ledswitch
    finally repeatPlan	
   
    //model-based behavior
    Plan ledswitch resumeLastPlan[
    	[ !? ledmodel( NAME, value(off) )] addRule newLedValue( on );
    	[ !? ledmodel( NAME, value(on) )]  addRule newLedValue( off );
    	[ ?? newLedValue(V)] demo changeledValue( V ) ;
    	[ !? ledmodel( NAME, value(V) )]   emit ledcmd : ledcmd( V )	//RLed2
     ]
}
/*
 * BUTTON subsystem
 */
QActor buttonimpl context bls1Ctx{
	Plan init normal [         
   		println( buttonimpl(starts)  )  ;
   		javaRun it.unibo.custom.gui.customBlsGui.createCustomButtonGui()
   	]
}

QActor  control context bls1Ctx{
	Plan init normal [  ]
   	switchTo waitForClick      
 
    Plan waitForClick[  ]  
    transition stopAfter 100000 
     	whenEvent local_click : clicked(N) do forward ledmodel -m turn : switch	//RAppl1
    finally repeatPlan	
}