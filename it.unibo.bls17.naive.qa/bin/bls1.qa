/*
 * This is A MODEL, result of problem analysis 
 * written in the CUSTOM meta-model/language qa
 */  
System bls1  
  
Event sensorEvent : sensorEvent( DATA )	//DATA : integer
Event ctrlEvent   : ctrlEvent( CMD )  	//CMD = on | off 

Context bls1Ctx ip [ host="localhost"  port=8019 ]    

QActor qasensor context bls1Ctx {
	Plan init normal  [   
		println( qasensor(starts)  );   
		delay 200;
		emit  sensorEvent :  sensorEvent( 20 ) ; 
		delay 200;
		emit  sensorEvent :  sensorEvent( 30 ) ; 
		delay 200;
		emit  sensorEvent :  sensorEvent( 35 ) ; 
		delay 200;
		emit  sensorEvent :  sensorEvent( 25 )   
    ]
}

QActor qacontrol context bls1Ctx{
Rules{
	evalTemperature( hot ) :- 		
		//output(evalTemperature1),
		curTemperatureValue(30), !.
	evalTemperature( hot ) :- 		
		//output(evalTemperature2),
		curTemperatureValue(V),
		eval( gt, V , 30 ), !.
	evalTemperature( cold ) :- 	
		//output(evalTemperature3), 
		curTemperatureValue(V),
		eval( lt, V , 30 ). 
}
	Plan init normal [         
   		println( qacontrol(starts)  )   
   	]
   	switchTo waitForSensorEvent      
 
    Plan waitForSensorEvent[  ]  
    transition stopAfter 100000 
     	whenEvent sensorEvent -> handleSensorEvent
    finally repeatPlan	
      
    Plan handleSensorEvent resumeLastPlan [   
    	//printCurrentEvent;  
    	onEvent sensorEvent : sensorEvent( V ) -> ReplaceRule curTemperatureValue(X)  with curTemperatureValue(V); 
    	[ !? evalTemperature(hot)  ] emit ctrlEvent : ctrlEvent(on);
    	[ !? evalTemperature(cold) ] emit ctrlEvent : ctrlEvent(off)
    ]
}

QActor qaactuator context bls1Ctx{
	Plan init normal [         
   		println( qaactuator(starts)  )   
   	]
   	switchTo waitForCommand     
  
    Plan waitForCommand[  ]  
    transition stopAfter 100000 
     	whenEvent ctrlEvent -> handleCmd
    finally repeatPlan	
   	 
	Plan handleCmd resumeLastPlan[
		//printCurrentEvent;
		onEvent ctrlEvent : ctrlEvent(CMD) -> println( ctrlEvent(CMD) )
	]
}