System rescuer

Event startEvent : startEvent
Event nfc : nfc(CONTENT)
Event abort : abort

Context rescuerContext ip[host="192.168.1.2" port=7890]  
 

QActor qarescuer context rescuerContext {
    Rules {
        address(android, "192.168.1.2", 9999).
        getData(RESCUER, PATIENT) :- rescuerID(RESCUER), patientID(PATIENT).
    }
    Plan init normal [
        println("start!");
        [!? address(android, IP, PORT)] actorOp initConnectionWithAndroid("proximaApp", IP, PORT)
    ] switchTo waitStartEvent
                  
    Plan waitStartEvent [
        println("wait start event")
    ] transition stopAfter 10000000
                  whenEvent startEvent -> waitRescuerID
                  finally repeatPlan
                
    Plan waitRescuerID [
        println("wait rescuer ID");
        onEvent startEvent : startEvent -> actorOp sendMessageToAndroid("transition(readRescuerId)")
    ] transition stopAfter 10000000
                  whenEvent nfc -> waitPatientID,
                  whenEvent abort -> abortState
                  
    Plan waitPatientID [
        println("wait patient ID");
        onEvent nfc : nfc(X) -> addRule rescuerID(X);
        actorOp sendMessageToAndroid("transition(readPatientId)")
    ] transition stopAfter 10000000
                  whenEvent nfc -> showData,
                  whenEvent abort -> abortState
                  
    Plan showData [
        println("show data");
        onEvent nfc : nfc(X) -> addRule patientID(X);
        [!? getData(R, P)] actorOp sendMessageToAndroid(showData(R,P));
        removeRule rescuerID(_);
        removeRule patientID(_)
    ] switchTo waitStartEvent
    
    Plan abortState [
        println("aborting...");
        onEvent abort : abort -> actorOp sendMessageToAndroid("transition(start)")
    ] switchTo waitStartEvent
                  
}

