/* 
 * ==============================================================
 * mbotAgent.qa
 * A robot that is able to move and to react to events
 * ==============================================================
 */     
System mbotAgent     
Event usercmd      : usercmd(CMD)        
Event sonar  	   : sonar(SONAR, TARGET, DISTANCE)	//From (virtual) sonar
Event sonarDetect  : sonarDetect(X)					//From (virtual robot) sonar
Event realSonar    : sonar( DISTANCE )				//From real sonar on real robot
Event    polar     : p( Distance, Angle )			//Just to perform an experiment
	
Context ctxMbotAgent    ip [ host="localhost"   port=8039 ]     
Context ctxMbotExecutor ip [ host="localhost"   port=8029 ] -standalone   //(0) 
//Context ctxRadarBase    ip [ host="localhost"   port=8033 ] -standalone 	//(1)
 
QActor roveragent context ctxMbotAgent {       
	Plan init normal [  
		//emit polar : p( 70, 180 ); 	//(2) event propagation experiment 
 		println("roveragent STARTS") 		
	]  
	switchTo lookAtSonars	 
	Plan lookAtSonars[
		println("roveragent lookAtSonars ") 
 	]
	transition stopAfter 6000000     
 		whenEvent sonar        -> handleFixedSonar , 	  
 		whenEvent sonarDetect  -> handleSonar ,  	
  		whenEvent realSonar    -> handleSonar   	
   
    //The robot is moving either forward or backward: move it out of sonar range.
	Plan handleFixedSonar  [
			delay 500 ;    //avoid to raise sonar events again   
			emit usercmd : usercmd( robotgui(h(low)) ) 		 	   		
	]
	switchTo lookAtSonars     
		
	//Obstacle
 	Plan handleSonar  [       
  		printCurrentEvent ;  
		emit usercmd :  usercmd( robotgui(s(low)) ) ; //retrogress
		delay 500 ;    //avoid to raise sonar events again   
		emit usercmd : usercmd( robotgui(h(low)) ) 		 	   			
	]       
  	switchTo lookAtSonars	 	
}//roveragent