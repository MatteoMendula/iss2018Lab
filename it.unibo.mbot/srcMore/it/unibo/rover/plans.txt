plan(1,init, sentence(true,move(print("rover START")),'','' ))
plan(2,init, sentence(true,not here StateMoveNormal,'','' ))
plan(1,execMove, sentence(true,printCurrentEvent(false),'','' ))
plan(2,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( unityAddr( X))), not here StateMoveNormal ),'','' ))
plan(3,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( w( X))), not here StateMoveNormal ),'','' ))
plan(4,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( s( X))), not here StateMoveNormal ),'','' ))
plan(5,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( a( X))), not here StateMoveNormal ),'','' ))
plan(6,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( d( X))), not here StateMoveNormal ),'','' ))
plan(7,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( h( X))), not here StateMoveNormal ),'','' ))
plan(8,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( x( X))), not here StateMoveNormal ),'','' ))
plan(9,execMove, sentence(true,eventswitch(usercmd, »usercmd( robotgui( f( X))), not here StateMoveNormal ),'','' ))
plan(10,execMove, sentence(true,move(resumeplan),'','' ))
plan(1,connectToUnity, sentence(true,eventswitch(usercmd, »usercmd( robotgui( unityAddr( ADDR))), move(print(unityAddrFromWebGUI( ADDR))) ),'','' ))
plan(2,connectToUnity, sentence( unityRemote( ADDR),move(print(pleaseACTIVATEUNITYon( ADDR))),'','' ))
plan(3,connectToUnity, sentence( unityOn,move(print("UNITY already connected")),'','' ))
plan(4,connectToUnity, sentence(true,move(resumeplan),'','' ))
plan(1,doconnectToUnity, sentence( unityAddr( "localhost"),move(print("ACTIVATING UNITY. Wait a moment ... ")),'','' ))
plan(2,doconnectToUnity, sentence( unityAddr( "localhost"),not here StateMoveNormal,'','' ))
plan(3,doconnectToUnity, sentence( unityAddr( "localhost"),delay( 10000) ,'','' ))
plan(4,doconnectToUnity, sentence( unityAddr( UNITYADDR),not here StateMoveNormal,'','' ))
plan(5,doconnectToUnity, sentence(true,not here StateMoveNormal,'','' ))
plan(6,doconnectToUnity, sentence(true,not here StateMoveNormal,'','' ))
plan(7,doconnectToUnity, sentence(true,not here StateMoveNormal,'','' ))
plan(8,doconnectToUnity, sentence(true,addRule( unityOn ),'','' ))
plan(9,doconnectToUnity, sentence(true,move(resumeplan),'','' ))
plan(1,moveForward, sentence(true,move(resumeplan),'','' ))
plan(1,moveBackward, sentence(true,move(resumeplan),'','' ))
plan(1,turnLeft, sentence(true,not here StateMoveNormal,'','' ))
plan(2,turnLeft, sentence( unityOn,not here StateMoveNormal,'','' ))
plan(3,turnLeft, sentence(true,not here StateMoveNormal,'','' ))
plan(4,turnLeft, sentence(true,move(resumeplan),'','' ))
plan(1,turnRight, sentence(true,not here StateMoveNormal,'','' ))
plan(2,turnRight, sentence( unityOn,not here StateMoveNormal,'','' ))
plan(3,turnRight, sentence(true,not here StateMoveNormal,'','' ))
plan(4,turnRight, sentence(true,move(resumeplan),'','' ))
plan(1,stopTheRobot, sentence(true,move(print("	**** STOP THE ROBOT")),'','' ))
plan(2,stopTheRobot, sentence(true,not here StateMoveNormal,'','' ))
plan(3,stopTheRobot, sentence(true,not here StateMoveNormal,'','' ))
plan(4,stopTheRobot, sentence(true,move(resumeplan),'','' ))
plan(1,terminataAppl, sentence(true,not here StateMoveNormal,'','' ))
plan(2,terminataAppl, sentence(true,not here StateMoveNormal,'','' ))
plan(3,terminataAppl, sentence(true,move(actorOp(terminateSystem)),'','' ))
plan(4,terminataAppl, sentence(true,move(resumeplan),'','' ))
plan(1,handleRobotSonarDetect, sentence(true,move(print("handleRobotSonarDetect")),'','' ))
plan(2,handleRobotSonarDetect, sentence(true,not here StateMoveNormal,'','' ))
plan(3,handleRobotSonarDetect, sentence(true,not here StateMoveNormal,'','' ))
plan(4,handleRobotSonarDetect, sentence(true,not here StateMoveNormal,'','' ))
plan(5,handleRobotSonarDetect, sentence(true,not here StateMoveNormal,'','' ))
plan(6,handleRobotSonarDetect, sentence(true,move(resumeplan),'','' ))
plan(1,handleRobotRealSonar, sentence(true,move(print("handleRobotRealSonar")),'','' ))
plan(2,handleRobotRealSonar, sentence(true,eventswitch(realSonar, »sonar( D), addRule( realDistance( D) ) ),'','' ))
plan(3,handleRobotRealSonar, sentence(true,move(resumeplan),'','' ))
plan(1,avoidRealObstacle, sentence(true,move(print("the avatar must execute the same move of the real robot")),'','' ))
plan(2,avoidRealObstacle, sentence(true,not here StateMoveNormal,'','' ))
plan(3,avoidRealObstacle, sentence(true,not here StateMoveNormal,'','' ))
plan(4,avoidRealObstacle, sentence(true,move(resumeplan),'','' ))
plan(1,handleSonar, sentence(true,not here StateMoveNormal,'','' ))
plan(2,handleSonar, sentence(true,not here StateMoveNormal,'','' ))
plan(3,handleSonar, sentence(true,not here StateMoveNormal,'','' ))
plan(4,handleSonar, sentence(true,move(resumeplan),'','' ))
plan(1,endOfMove, sentence(true,move(print("endOfMove")),'','' ))
plan(2,endOfMove, sentence(true,move(resumeplan),'','' ))
plan(1,handleEndOfMove, sentence(true,move(print("handleEndOfMove")),'','' ))
plan(2,handleEndOfMove, sentence(true,move(resumeplan),'','' ))
plan(1,handleTout, sentence(true,move(print("handleTout")),'','' ))
