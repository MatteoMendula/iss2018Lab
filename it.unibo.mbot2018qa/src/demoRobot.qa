/*
 * ==============================================================
 * it\unibo\mbot2018.qa\src\demoRobot.qa
 * ==============================================================
 */ 
System demoRobot
 
Event sonarEvent  : distance(D, DIR, POS) //from SensorObserver
 
Event usercmd     : usercmd(X)    //from robot GUI;  X=robotgui(CMD) CMD=s(low)
Event inputcmd    : usercmd(X)    //from input GUI;  X=executeInput( do(G,M) )
Event alarm       : alarm(X)      //from red button  
Event obstacle    : obstacle(X)   //from red button and from SensorObserver
Event sonarDetect : sonarDetect(X)							//From (virtual robot) sonar
Event sonar  	  : sonar(SONAR, TARGET, DISTANCE)			//From (virtual) sonar
   
Context ctxDemoRobot   ip [ host="localhost"   port=8078 ] -httpserver     
  
 QActor robotdemo context ctxDemoRobot   { 
 	State init normal [  
 		println("robotdemo STARTS");
 		javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.setUp()
 	]      
 	switchTo  someMove  
 	
 	State someMove[
  		delay 1000;
 		javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("w"); 
 		delay 1000;
 		javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("s"); 
 		delay 1000;
  		javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("h") 
  	]
   	switchTo handleUserEvent
  	
 	
 	State handleSonarEvent resumeLastPlan [
 		printCurrentEvent
 	]
 
 	State handleUserEvent  [
 		 println("waiting for an user command ...")
 	]
  	transition stopAfter 600000
 		whenEvent usercmd    -> execMove
 		//whenEvent sonarEvent -> handleSonarEvent
 		finally repeatPlan  
 	
 	State execMove resumeLastPlan[   //MAPPING AFTER EXPERIMENTATION
 		printCurrentEvent; 
    		onEvent usercmd :  usercmd( robotgui(w(X)) ) -> 
				javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("a"); 
    		onEvent usercmd :  usercmd( robotgui(s(X)) ) ->  
    			javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("d"); 
  			onEvent usercmd :  usercmd( robotgui(a(X)) ) -> 
				javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("w");    
   			onEvent usercmd :  usercmd( robotgui(d(X)) ) -> 
				javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("s"); 
   			onEvent usercmd :  usercmd( robotgui(h(X)) ) -> 
				javaRun it.unibo.robotOnRaspOnly.basicRobotExecutor.doMove("h") 
   			//onEvent usercmd :  usercmd( CMD ) -> println( commandUnknown(CMD) ) 
  	]
   
 }    